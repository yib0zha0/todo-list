// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot test 1`] = `
<View>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
  >
    <RCTScrollView
      contentInsetAdjustmentBehavior="automatic"
      style={
        Object {
          "backgroundColor": "#F3F3F3",
        }
      }
    >
      <View>
        <View
          accessibilityIgnoresInvertColors={true}
          style={
            Object {
              "backgroundColor": "#F3F3F3",
              "paddingBottom": 40,
              "paddingHorizontal": 32,
              "paddingTop": 96,
            }
          }
        >
          <Image
            accessibilityRole="image"
            source={
              Object {
                "testUri": "../Libraries/NewAppScreen/components/logo.png",
              }
            }
            style={
              Array [
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                Object {
                  "height": undefined,
                  "width": undefined,
                },
                Object {
                  "marginBottom": -192,
                  "marginLeft": -128,
                  "opacity": 0.2,
                  "overflow": "visible",
                  "resizeMode": "cover",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "color": "#000",
                "fontSize": 40,
                "fontWeight": "600",
                "textAlign": "center",
              }
            }
          >
            Welcome to React
          </Text>
        </View>
        <View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "paddingVertical": 2,
              }
            }
          >
            <Text>
              Sort By: 
            </Text>
            <View
              style={
                Object {
                  "flex": 0.3,
                  "paddingHorizontal": 2,
                }
              }
            >
              <View
                accessibilityRole="button"
                accessibilityState={Object {}}
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="sortByPriority"
              >
                <View
                  style={
                    Array [
                      Object {},
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#007AFF",
                          "fontSize": 18,
                          "margin": 8,
                          "textAlign": "center",
                        },
                      ]
                    }
                  >
                    Priority
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "flex": 0.3,
                  "paddingHorizontal": 2,
                }
              }
            >
              <View
                accessibilityRole="button"
                accessibilityState={Object {}}
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="sortByTime"
              >
                <View
                  style={
                    Array [
                      Object {},
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#007AFF",
                          "fontSize": 18,
                          "margin": 8,
                          "textAlign": "center",
                        },
                      ]
                    }
                  >
                    Time
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "backgroundColor": "floralwhite",
                "borderColor": "lavender",
                "borderWidth": 2,
                "padding": 5,
              }
            }
            testID="todo-0"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "lavender",
                  "borderBottomWidth": 2,
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <View
                pointerEvents="auto"
              >
                <RNCCheckbox
                  forwardedRef={null}
                  onValueChange={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "height": 32,
                        "width": 32,
                      },
                      Object {
                        "flex": 0.1,
                      },
                    ]
                  }
                  testID="checkbox-todo-0"
                  value={false}
                />
              </View>
              <TextInput
                allowFontScaling={true}
                onChangeText={[Function]}
                placeholder="Title"
                rejectResponderTermination={true}
                style={
                  Object {
                    "flex": 0.6,
                    "fontSize": 20,
                  }
                }
                underlineColorAndroid="transparent"
                value=""
              />
              <View
                style={
                  Object {
                    "flex": 0.3,
                  }
                }
              >
                <View>
                  <RCTPicker
                    items={
                      Array [
                        Object {
                          "label": "Urgent",
                          "textColor": undefined,
                          "value": "1",
                        },
                        Object {
                          "label": "High",
                          "textColor": undefined,
                          "value": "2",
                        },
                        Object {
                          "label": "Medium",
                          "textColor": undefined,
                          "value": "3",
                        },
                        Object {
                          "label": "Low",
                          "textColor": undefined,
                          "value": "4",
                        },
                      ]
                    }
                    onChange={[Function]}
                    selectedIndex={0}
                    style={
                      Array [
                        Object {
                          "height": 216,
                        },
                        undefined,
                      ]
                    }
                  />
                </View>
              </View>
              <View
                style={
                  Object {
                    "flex": 0.1,
                  }
                }
              >
                <View
                  accessibilityRole="button"
                  accessibilityState={Object {}}
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID="delete-todo-0"
                >
                  <View
                    style={
                      Array [
                        Object {},
                      ]
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "#007AFF",
                            "fontSize": 18,
                            "margin": 8,
                            "textAlign": "center",
                          },
                          Object {
                            "color": "red",
                          },
                        ]
                      }
                    >
                      X
                    </Text>
                  </View>
                </View>
              </View>
            </View>
            <TextInput
              allowFontScaling={true}
              onChangeText={[Function]}
              placeholder="Description"
              rejectResponderTermination={true}
              style={Object {}}
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
          <View
            accessibilityRole="button"
            accessibilityState={Object {}}
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="newTodo"
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "margin": 8,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                New Todo
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </RCTSafeAreaView>
</View>
`;
